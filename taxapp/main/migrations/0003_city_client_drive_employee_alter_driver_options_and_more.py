# Generated by Django 4.2.1 on 2023-05-13 16:01

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0002_alter_car_options_alter_driver_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('est_time_ufa', models.DecimalField(decimal_places=2, max_digits=4)),
                ('dist_ufa', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(500)])),
            ],
            options={
                'verbose_name_plural': 'Города',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=20)),
                ('name', models.CharField(blank=True, default='', max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Клиенты',
            },
        ),
        migrations.CreateModel(
            name='Drive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'Поездки',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Сотрудники',
            },
        ),
        migrations.AlterModelOptions(
            name='driver',
            options={'verbose_name_plural': 'Водители в рейсе'},
        ),
        migrations.RemoveField(
            model_name='driver',
            name='name',
        ),
        migrations.RemoveField(
            model_name='driver',
            name='phone',
        ),
        migrations.AddField(
            model_name='car',
            name='model',
            field=models.CharField(default='Renault Logan', max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='driver',
            name='car',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='main.car'),
            preserve_default=False,
        ),
        migrations.RenameModel(
            old_name='ScheduleUfa',
            new_name='Schedule',
        ),
        migrations.CreateModel(
            name='Stops',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.city')),
                ('drive', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stops', to='main.drive')),
            ],
            options={
                'verbose_name_plural': 'Остановки',
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.PositiveIntegerField(default=100, validators=[django.core.validators.MinValueValidator(100), django.core.validators.MaxValueValidator(5000)])),
                ('finish_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='finish_city', to='main.city')),
                ('start_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='start_city', to='main.city')),
            ],
            options={
                'verbose_name_plural': 'Маршруты - стоимость',
                'unique_together': {('start_city', 'finish_city')},
            },
        ),
        migrations.CreateModel(
            name='Passenger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('est_dep_time', models.DateTimeField()),
                ('start_address', models.CharField(max_length=250)),
                ('finish_address', models.CharField(max_length=250)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.client')),
                ('drive', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.drive')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.route')),
            ],
            options={
                'verbose_name_plural': 'Пассажиры',
            },
        ),
        migrations.AddField(
            model_name='drive',
            name='driver',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.driver'),
        ),
        migrations.AddField(
            model_name='drive',
            name='route',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.route'),
        ),
        migrations.AddField(
            model_name='drive',
            name='start_time',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.schedule'),
        ),
        migrations.AddField(
            model_name='driver',
            name='employee',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='main.employee'),
            preserve_default=False,
        ),
        migrations.AlterUniqueTogether(
            name='drive',
            unique_together={('start_time', 'driver', 'route')},
        ),
    ]
